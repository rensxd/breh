import java.util.ArrayList;
import java.util.HashMap;

public class Bord {
	
	HashMap<Integer, Tiles> tiles;
	ArrayList<LocationPoint> locationpoints;
	
	Bord(){
		
		tiles = new HashMap<Integer, Tiles>();
		locationpoints = new ArrayList<LocationPoint>();
		addLocationPoints();
		addTiles();
	}
	
	void addLocationPoints(){
		int a = 1;
		for (int i = 3; i < 5; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 2; i < 7; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 1; i < 9; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 1; i < 10; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 2; i < 10; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 2; i < 11; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 3; i < 11; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 3; i < 12; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 4; i < 12; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 6; i < 11; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		a++;
		for (int i = 8; i < 10; i++) {
			locationpoints.add(new LocationPoint(a, i));
		}
		for (int i = 0; i < locationpoints.size(); i++)
		System.out.println(i + ": " + locationpoints.get(i).getCordinateX() + " " + locationpoints.get(i).getCordinateY());
		
	}
	
	void addTiles(){
		Tiles tiles2 = new Tiles("", 0, 0);
		 
			tiles.put(1, new Tiles(tiles2.getRandomType(), locationpoints.get(22).getCordinateX(), locationpoints.get(22).getCordinateY()));
			tiles.put(2, new Tiles(tiles2.getRandomType(), locationpoints.get(39).getCordinateX(), locationpoints.get(39).getCordinateY()));
			tiles.put(3, new Tiles(tiles2.getRandomType(), locationpoints.get(56).getCordinateX(), locationpoints.get(56).getCordinateY()));
			tiles.put(4, new Tiles(tiles2.getRandomType(), locationpoints.get(12).getCordinateX(), locationpoints.get(12).getCordinateY()));
			tiles.put(5, new Tiles(tiles2.getRandomType(), locationpoints.get(29).getCordinateX(), locationpoints.get(29).getCordinateY()));
			tiles.put(6, new Tiles(tiles2.getRandomType(), locationpoints.get(46).getCordinateX(), locationpoints.get(46).getCordinateY()));
			tiles.put(7, new Tiles(tiles2.getRandomType(), locationpoints.get(63).getCordinateX(), locationpoints.get(63).getCordinateY()));
			tiles.put(8, new Tiles(tiles2.getRandomType(), locationpoints.get(4).getCordinateX(), locationpoints.get(4).getCordinateY()));
			tiles.put(9, new Tiles(tiles2.getRandomType(), locationpoints.get(19).getCordinateX(), locationpoints.get(19).getCordinateY()));
			tiles.put(10, new Tiles("Desert", locationpoints.get(36).getCordinateX(), locationpoints.get(36).getCordinateY()));
			tiles.put(11, new Tiles(tiles2.getRandomType(), locationpoints.get(53).getCordinateX(), locationpoints.get(53).getCordinateY()));
			tiles.put(12, new Tiles(tiles2.getRandomType(), locationpoints.get(68).getCordinateX(), locationpoints.get(68).getCordinateY()));
			tiles.put(13, new Tiles(tiles2.getRandomType(), locationpoints.get(9).getCordinateX(), locationpoints.get(9).getCordinateY()));
			tiles.put(14, new Tiles(tiles2.getRandomType(), locationpoints.get(26).getCordinateX(), locationpoints.get(26).getCordinateY()));
			tiles.put(15, new Tiles(tiles2.getRandomType(), locationpoints.get(43).getCordinateX(), locationpoints.get(43).getCordinateY()));
			tiles.put(16, new Tiles(tiles2.getRandomType(), locationpoints.get(60).getCordinateX(), locationpoints.get(60).getCordinateY()));
			tiles.put(17, new Tiles(tiles2.getRandomType(), locationpoints.get(16).getCordinateX(), locationpoints.get(16).getCordinateY()));
			tiles.put(18, new Tiles(tiles2.getRandomType(), locationpoints.get(33).getCordinateX(), locationpoints.get(33).getCordinateY()));
			tiles.put(19, new Tiles(tiles2.getRandomType(), locationpoints.get(50).getCordinateX(), locationpoints.get(50).getCordinateY()));
			System.out.println(tiles.keySet() + " " + tiles.values());
			System.out.println(tiles.get(1).type);
			System.out.println(tiles.get(3).type);
			System.out.println(tiles.get(8).type);
	}

}
